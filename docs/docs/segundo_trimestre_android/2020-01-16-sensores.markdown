---
layout: post
title:  "Sensores"
date:   2020-01-16 14:30:00 +0200
categories: segundo_trimestre
order: 1
parent: Segundo trimestre Android
---

[GitHub](https://github.com/Manuel-Ag/PMD_19-20/tree/master/Sensores){: .btn .btn-blue } [Documentación](https://developer.android.com/guide/topics/sensors/sensors_overview){: .btn .btn-green }

# Sensores

En el siguiente ejemplo se van a recuperar los valores devueltos por los sensores del dispositivo:

{:refdef: style="text-align: center;"}
![Android]({{ site.baseurl }}/assets/img_post_sensores/gif1.gif)
{:refdef}

Primeramente, instancia `SensorManager`.

```java
SensorManager sensorManager;
sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
```

A través de `sensorManager` se podrá consultar los valores de distintos sensores. Por ejemplo:

## Listar todos los sensores

```java
public void listadoSensores(View v) {
    sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
    List<Sensor> sensors = sensorManager.getSensorList(Sensor.TYPE_ALL); // Se puede seleccinar el tipo

    for (int i = 0; i < sensors.size(); i++) {
        Log.i("prueba", sensors.get(i).getName());
    }
}
```

Observa como se ha llamado a `sensorManager.getSensorList()` y recuperando todos los tipos de sensores definidos mediante la constante `Sensor.TYPE_ALL`.

## Mostrar el valor del acelerómetro

Implementa la interface `SensorEventListener` y los métodos `onSensorChanged()` y `onAccuracyChanged()`.

```java
public class MainActivity extends AppCompatActivity implements SensorEventListener {
  ...
}
```
Recuerda instanciar siempre que se necesite `sensorManager`.

```java
public void acelerometro(View v) {
    sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
    Sensor acelerometro = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
    Toast.makeText(this, acelerometro.getName(), Toast.LENGTH_SHORT).show();
    sensorManager.registerListener(this, acelerometro, SensorManager.SENSOR_DELAY_NORMAL);
}
```

Únicamente recuperamos el tipo de sensor `Sensor.TYPE_ACCELEROMETER`. Además, registramos un listener a `sensorManager` que hará que el método `onSensorChanged()` sea llamado periódicamente, con un intervalo de tiempo definido en `SensorManager.SENSOR_DELAY_NORMAL`.

```java
@Override
public void onSensorChanged(SensorEvent sensorEvent) {
    switch (sensorEvent.sensor.getType()) {
        case Sensor.TYPE_ACCELEROMETER:
            ArrayList<Float> valores = new ArrayList<Float>();

            Log.i("prueba", "Cantidad de valores: " + sensorEvent.values.length);
            for (int i = 0; i < sensorEvent.values.length; i++){
                valores.add(sensorEvent.values[i]);
            }
            Log.i("prueba", valores.toString());
            break;
    }
}
```

Podemos guardar los valores recuperados en una lista, ya que dependiendo del tipo de sensor la cantidad de valores devueltos varía.
